@model TiendaOnline.Models.Cotizacion

@{
    ViewBag.Title = "SeleccionarHora";
}

<script src='https://momentjs.com/downloads/moment.min.js'></script>
<link href='~/Content/Calendar/main.css' rel='stylesheet' />
<script src='~/Content/Calendar/main.js'></script>

<style>
    html, body {
        margin: 0;
        padding: 0;
        font-family: Arial, Helvetica Neue, Helvetica, sans-serif;
        font-size: 14px;
    }

    #external-events {
        z-index: 2;
        top: 20px;
        left: 20px;
        padding: 10px;
        border: 1px solid #ccc;
        background: #eee;
    }

        #external-events .fc-event {
            cursor: move;
            margin: 3px 0;
        }
</style>

<div class="text-center" style="margin-top:10px"><h2>Seleccionar Hora</h2></div>
<hr />


<div style="padding:20px">
    <div class="row">
        <div style="background-color:#ffe867; width:20%; padding:10px">
            <button class="btn btn-dark" id="btnRegistrarCita" onclick="RegistrarCita();" style="width:100%; margin-bottom:10px">Confirmar Hora</button>
            <div id='external-events'>
                <p class="text-center" style="width:100%">
                    <strong>Cotización</strong><br />
                    @Model.Codigo
                </p>
                <hr />
                <div class="text-left">
                    <div><strong>Fecha:</strong> @Model.Fecha</div>
                    <div><strong>Servicio:</strong> @Model.ServiciosCotizados.First().Servicio.Nombre</div>
                    <div><strong>Cliente:</strong> @Model.Usuario.NombreCompleto</div>
                </div>

            </div>
        </div>
        <div id='calendar' style="width:80%; padding:10px"></div>
    </div>

</div>

<!-- Seleccionar Hora Modal-->
<div class="modal fade" style="display:none;" id="SelectHoraModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="labelMensaje"> Su hora ha sido registrada </h5>
            </div>
            <div class="modal-body">
                <div style="margin-bottom: 5px">
                    <p>Pronto te llegará un correo con un comprobante que deberás presentar en tu Cita.</p>
                </div>
                <div style="margin-bottom: 5px" id="labelCodigo"></div>
                <div style="margin-bottom: 5px" id="labelFecha"></div>
            </div>
            <div class="modal-footer">
                <a style="color:white" class="btn btn-danger btn-ok">Aceptar</a>
            </div>
        </div>
    </div>
</div>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "__AjaxAntiForgeryForm" }))
{
    @Html.AntiForgeryToken()
}

<script>
    var calendar = null;
    var eventoCita = null;
    var businessHours = [];

    //Horario de Trabajo
    @foreach (var horario in Model.UsuarioTiendaMecanico.Horario)
    {

        <text>
            var horaEntrada = '@horario.HoraEntrada.TimeOfDay.ToString()';
            var horaDescansoIn = '@horario.HoraDescansoInicio.TimeOfDay.ToString()';
            var horaDescansoFin = '@horario.HoraDescansoTermino.TimeOfDay.ToString()';
            var horaSalida = '@horario.HoraSalida.TimeOfDay.ToString()';

            @if (horario.Dia == TiendaOnline.Models.HorarioTrabajador.DiaHorarioTrabajador.Lunes)
            {
                <text>

                    businessHours.push({
                        daysOfWeek: [1],
                        startTime: horaEntrada,
                        endTime: horaDescansoIn
                        },
                        {
                        daysOfWeek: [1],
                        startTime: horaDescansoFin,
                        endTime: horaSalida
                    });
                </text>
            }
            @if (horario.Dia == TiendaOnline.Models.HorarioTrabajador.DiaHorarioTrabajador.Martes)
            {
                <text>

                    businessHours.push({
                        daysOfWeek: [2],
                        startTime: horaEntrada,
                        endTime: horaDescansoIn
                        },
                        {
                        daysOfWeek: [2],
                        startTime: horaDescansoFin,
                        endTime: horaSalida
                    });
                </text>
            }
            @if (horario.Dia == TiendaOnline.Models.HorarioTrabajador.DiaHorarioTrabajador.Miercoles)
            {
                <text>

                    businessHours.push({
                        daysOfWeek: [3],
                        startTime: horaEntrada,
                        endTime: horaDescansoIn
                        },
                        {
                        daysOfWeek: [3],
                        startTime: horaDescansoFin,
                        endTime: horaSalida
                    });
                </text>
            }
            @if (horario.Dia == TiendaOnline.Models.HorarioTrabajador.DiaHorarioTrabajador.Jueves)
            {
                <text>

                    businessHours.push({
                        daysOfWeek: [4],
                        startTime: horaEntrada,
                        endTime: horaDescansoIn
                        },
                        {
                        daysOfWeek: [4],
                        startTime: horaDescansoFin,
                        endTime: horaSalida
                    });
                </text>
            }
            @if (horario.Dia == TiendaOnline.Models.HorarioTrabajador.DiaHorarioTrabajador.Viernes)
            {
                <text>

                    businessHours.push({
                        daysOfWeek: [5],
                        startTime: horaEntrada,
                        endTime: horaDescansoIn
                        },
                        {
                        daysOfWeek: [5],
                        startTime: horaDescansoFin,
                        endTime: horaSalida
                    });
                </text>
            }
            @if (horario.Dia == TiendaOnline.Models.HorarioTrabajador.DiaHorarioTrabajador.Sabado)
            {
                <text>

                    businessHours.push({
                        daysOfWeek: [6],
                        startTime: horaEntrada,
                        endTime: horaDescansoIn
                        },
                        {
                        daysOfWeek: [6],
                        startTime: horaDescansoFin,
                        endTime: horaSalida
                    });
                </text>
            }
            @if (horario.Dia == TiendaOnline.Models.HorarioTrabajador.DiaHorarioTrabajador.Domingo)
            {
                <text>

                    businessHours.push({
                        daysOfWeek: [0],
                        startTime: horaEntrada,
                        endTime: horaDescansoIn
                        },
                        {
                        daysOfWeek: [0],
                        startTime: horaDescansoFin,
                        endTime: horaSalida
                    });
                </text>
            }
    </text>
    }

   document.addEventListener('DOMContentLoaded', function () {
            var Calendar = FullCalendar.Calendar;
            var Draggable = FullCalendar.Draggable;

            var containerEl = document.getElementById('external-events');
            var calendarEl = document.getElementById('calendar');
            var checkbox = document.getElementById('drop-remove');

            // initialize the external events
            // -----------------------------------------------------------------

            new Draggable(containerEl, {
            itemSelector: '.fc-event',
            eventData: function (eventEl) {
                return {
                title: eventEl.innerText
                };
        }
    });

        // initialize the calendar
        // -----------------------------------------------------------------

        calendar = new Calendar(calendarEl, {
        headerToolbar: {
            left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'
            },
            buttonText: {
            today: 'Hoy',
                month: 'Mes',
                week: 'Semana',
                day: 'Día',
                list: 'Lista'
            },
            initialView: 'timeGridWeek',
            editable: true,
            droppable: true, // this allows things to be dropped onto the calendar

            drop: function (info) {
            // is the "remove after drop" checkbox checked?
            if (checkbox.checked) {
                    // if so, remove the element from the "Draggable Events" list
                    info.draggedEl.parentNode.removeChild(info.draggedEl);
                }
                },
            businessHours
        });

        calendar.setOption('locale', 'Es');
        calendar.render();

        calendar.on('dateClick', function (info) {
        var dateFormat = moment(info.dateStr).format('DD/MM/YYYY hh:mm');
        //document.getElementById("labelDateId").innerHTML = dateFormat;

        if (eventoCita != null) {
            eventoCita.remove();
        }

        calendar.batchRendering(function () {
            eventoCita = calendar.addEvent({
                id: 'idEvent',
                groupId: 'testGroupId',
                start: info.dateStr
            });
        });

            //eventoCita = calendar.getEventById('idEvent');
        });

        @if (Model.UsuarioTiendaMecanico.Agendas.Count > 0)
        {
            foreach (var cita in Model.UsuarioTiendaMecanico.Agendas.First().Citas)
            {
                <text>
                    var yearInicio = '@cita.FechaInicio.Year.ToString()';
                    var monthInicio = '@cita.FechaInicio.Month.ToString("00")';
                    var dayInicio = '@cita.FechaInicio.Day.ToString("00")';
                    var hourInicio = '@cita.FechaInicio.Hour.ToString("00")';
                    var minuteInicio = '@cita.FechaInicio.Minute.ToString("00")';
                    var secondInicio = '@cita.FechaInicio.Second.ToString("00")';

                    var yearTermino = '@cita.FechaTermino.Year.ToString()';
                    var monthTermino = '@cita.FechaTermino.Month.ToString("00")';
                    var dayTermino = '@cita.FechaTermino.Day.ToString("00")';
                    var hourTermino = '@cita.FechaTermino.Hour.ToString("00")';
                    var minuteTermino = '@cita.FechaTermino.Minute.ToString("00")';
                    var secondTermino = '@cita.FechaTermino.Second.ToString("00")';

                    var fechaInicio = yearInicio + "-" + monthInicio + "-" + dayInicio + "T" + hourInicio + ":" + minuteInicio + ":" + secondInicio;
                    var fechaTermino = yearTermino + "-" + monthTermino + "-" + dayTermino + "T" + hourTermino + ":" + minuteTermino + ":" + secondTermino;

                    calendar.addEvent({
                        start: fechaInicio,
                        end: fechaTermino,
                        display: 'background',
                        color: 'red',
                        allDay: false
                    });
                </text>
            }
        }

    });

    function RegistrarCita() {

            var $btnSubmit = document.getElementById("btnRegistrarCita");
            $btnSubmit.disabled = true;

            if (eventoCita == null) {
                alert("Debe seleccionar una hora");
                return;
            }

            var form = $('#__AjaxAntiForgeryForm');
            var token = $('input[name="__RequestVerificationToken"]', form).val();

            $.ajax({
                type: "POST",
                url: "/Schedule/SeleccionarHora",
                data: {
                    __RequestVerificationToken: token,
                    model: {
                        FechaInicio: moment(eventoCita.start).format('DD/MM/YYYY hh:mm'),
                        FechaTermino: moment(eventoCita.start).format('DD/MM/YYYY hh:mm'),
                        UsuarioTiendaMecanicoId: @Html.Raw(Json.Encode(Model.UsuarioTiendaMecanico.Id)),
                        CotizacionId: @Html.Raw(Json.Encode(Model.Id)),
                        UsuarioId: @Html.Raw(Json.Encode(Model.Usuario.Id))
                    }
                },
                success: function (result) {

                    //location.reload(true);
                    if (result.exito == true) {
                        document.getElementById("labelCodigo").innerHTML = "<strong>Código: </strong>" + result.Codigo;
                        document.getElementById("labelFecha").innerHTML = "<strong>Fecha: </strong>" + result.Fecha;

                        $("#SelectHoraModal").modal();
                    }
                    else if (result.exito == false) {
                        $btnSubmit.disabled = false;
                        alert(result.mensaje);
                    }

                },
                error: function (result) {
                    //debugger;
                    $btnSubmit.disabled = false;
                }
            });
    }


    $('#SelectHoraModal').on('click', '.btn-ok', function (e) {
            window.location.href = '/Home/Index/';
    });
</script>